class PolyverseAmbience : ZilchComponent
{
    var RandMusic : Random = Random();
    
    var BeepInterval : Real = 4.0;
    
    var BeepCooldown : Real = 0.0;
    
    var TimeSinceCube : Real = 0.0;
    
    [Property]
    var Beep : Boolean = true;
    
    [Property]
    var Music : Boolean = true;
    
    function Initialize(init : CogInitializer)
    {
        SoundCue.PolyverseAmbience1.Volume = 1.5;
        SoundCue.PolyverseAmbience2.Volume = 1.5;
        SoundCue.PolyverseAmbience3.Volume = 4.0;
        SoundCue.PolyverseAmbience1.Pitch = 0;
        SoundCue.PolyverseAmbience2.Pitch = 0;
        SoundCue.Beeps1.Volume = 10;
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.BeepCooldown -= event.Dt;
        this.TimeSinceCube += event.Dt;
        if(this.Music && !this.Owner.SoundEmitter.IsPlaying())
        {
            if(this.RandMusic.Probability(0.85))
            {
                this.Owner.SoundEmitter.PlayCue(SoundCue.PolyverseAmbience1);
            }
            else
            {
                this.Owner.SoundEmitter.PlayCue(SoundCue.PolyverseAmbience2);
            }
        }
        else
        {
            if(this.RandMusic.Probability(event.Dt) && this.BeepCooldown <= 0.0)
            {
                this.BeepCooldown = this.BeepInterval;
                SoundCue.Beeps1.PitchVariation = 0.025;
                SoundCue.Beeps1.Volume = 10.0;
                SoundCue.Beeps2.PitchVariation = 0.025;
                SoundCue.Beeps2.Volume = 1.25;
                if(this.Beep)
                {
                    if(this.RandMusic.Probability(0.6))
                    {
                        this.Space.SoundSpace.PlayCue(SoundCue.Beeps1);
                    }
                    else if(this.TimeSinceCube > 6.0)
                    {
                        this.TimeSinceCube = 0.0;
                        this.Space.SoundSpace.PlayCue(SoundCue.Beeps2);
                    }
                }
            }
        }
    }
}
