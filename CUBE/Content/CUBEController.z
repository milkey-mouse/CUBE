class CUBEController : ZilchComponent
{
    var Paused : Boolean = true;
    
    var JumpsLeft : Integer = 0;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
    }
    
    function OnCollisionStarted(event : CollisionEvent)
    {
        if(this.Paused)
        {
            var group : ActionSet = this.Owner.Actions; //Action.Group();
            Action.Delay(group, 1.0);
            Action.Call(group, this.RemoveLock);
        }
        this.JumpsLeft = 2;
    }
    
    function RemoveLock()
    {
        this.Paused = false;
        this.Space.FindObjectByName("Camera").LerpTowardsTarget.Tracking = true;
    }
    
    function OnLogicUpdate(event : UpdateEvent)
    {
        if(this.Paused)
        {
            return;
        }
        if(this.Owner.Orientation.WorldForward.Y > 0.9 || this.Owner.Orientation.WorldForward.Y < -0.9)
        {
            this.Owner.Transform.RotateAnglesWorld(Real3(Math.Pi / 2, 0, 0));
        }
        if(this.Owner.Transform.WorldTranslation.Y < -10)
        {
            this.Space.ReloadLevel();
        }
        if(this.JumpsLeft > 0 && Zero.Keyboard.KeyIsPressed(Keys.Space))
        {
            this.Owner.RigidBody.Velocity = Real3(this.Owner.RigidBody.Velocity.X,4.5,this.Owner.RigidBody.Velocity.Z);
            --this.JumpsLeft;
        }
        if(Zero.Keyboard.KeyIsDown(Keys.A) && !Zero.Keyboard.KeyIsDown(Keys.D))
        {
            this.Owner.RigidBody.AngularVelocity = Real3(this.Owner.RigidBody.AngularVelocity.X, event.Dt * 200, this.Owner.RigidBody.AngularVelocity.Z);
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.D) && !Zero.Keyboard.KeyIsDown(Keys.A))
        {
            this.Owner.RigidBody.AngularVelocity = Real3(this.Owner.RigidBody.AngularVelocity.X, -event.Dt * 200, this.Owner.RigidBody.AngularVelocity.Z);
        }
        else
        {
            this.Owner.RigidBody.AngularVelocity = Real3(this.Owner.RigidBody.AngularVelocity.X,0,this.Owner.RigidBody.AngularVelocity.Z);
        }
        var angle : Real = this.Owner.Orientation.AbsoluteAngle;
        if(Zero.Keyboard.KeyIsDown(Keys.W) && !Zero.Keyboard.KeyIsDown(Keys.S))
        {
            this.Owner.RigidBody.Velocity = -Real3(Math.Sin(angle) * event.Dt * 500, -this.Owner.RigidBody.Velocity.Y, Math.Cos(angle) * event.Dt * 500);
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.S) && !Zero.Keyboard.KeyIsDown(Keys.W))
        {
            this.Owner.RigidBody.Velocity = Real3(Math.Sin(angle) * event.Dt * 500, -this.Owner.RigidBody.Velocity.Y, Math.Cos(angle) * event.Dt * 500);
        }
        else
        {
            this.Owner.RigidBody.Velocity = Real3(0,this.Owner.RigidBody.Velocity.Y,0);
        }
    }
}
